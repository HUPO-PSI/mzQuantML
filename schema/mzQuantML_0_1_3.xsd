<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 sp1 (x64) (http://www.altova.com) by Martin Eisenacher (Medizinisches Proteom-Center) -->
<!--
mzQuantML version 0.1.3
Distributed under the Creative Commons license http://creativecommons.org/licenses/by/2.0/.

Issues:
		different representations for the same setup?
		value redundance?
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://psidev.info/psi/pi/mzQuantML/0.1" xmlns:psi-pi="http://psidev.info/psi/pi/mzQuantML/0.1" targetNamespace="http://psidev.info/psi/pi/mzQuantML/0.1" elementFormDefault="qualified" version="0.1">
	<xsd:element name="mzQuantML">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="cvList" type="cvListType"/>
				<xsd:element name="ProteinList" type="ProteinListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of all proteins quantified. This element should always be provided unless there is only quantification of peptides.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="PeptideList" type="PeptideListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of all peptides quantified.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="AssayList" type="AssayListType">
					<xsd:annotation>
						<xsd:documentation>The list of assays represented by the file, where each assay captures the concept of one experimental run - this can be one or more raw files.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="StudyVariableList" type="StudyVariableListType">
					<xsd:annotation>
						<xsd:documentation>The list of experimental conditions used to group results.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="FeatureList" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of features quantified from raw files</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="FeatureListType"/>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="QuantList" type="QuantificationsLayerListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of quantified values or ratios calculated from the features.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="DataProcessingList" type="DataProcessingListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Data processing steps used to create the results</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="cvListType">
		<xsd:sequence>
			<xsd:element name="cv" type="cvType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableListType">
		<xsd:sequence>
			<xsd:element name="StudyVariable" type="StudyVariableType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="cvType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>A source controlled vocabulary from which cvParams will be obtained.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="fullName" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The full name of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The version of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="URI" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the source CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The unique identifier of this cv within the document to be referenced by cvParam elements.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ProteinListType">
		<xsd:sequence>
			<xsd:element name="QuantProteinAmbiguityGroup" type="QuantProteinAmbiguityGroupType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="QuantProteinDetectionHypothesis" type="QuantProteinDetectionHypothesisType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantProteinAmbiguityGroupType">
		<xsd:sequence>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="QuantitationResult" type="QuantitationResultType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>This contains one quantitation value for this protein ambiguity group.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="QuantProteinDetectionHypothesisRefs" type="QuantProteinDetectionHypothesisRefsType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Here the proteins can be referenced building this protein ambiguity group (actually repetition of information in mzIdentML).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="QuantProteinDetectionHypothesisType">
		<xsd:sequence>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="QuantitationResult" type="QuantitationResultType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>This contains one quantitation value for this protein.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="QuantPeptideRefs" type="QuantPeptideRefsType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Here the peptides can be referenced building this protein (actually repetition of information in mzIdentML).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="GroupedQuantitationResultType">
		<xsd:sequence>
			<xsd:element name="GroupMeasureParam" type="GroupMeasureParamType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="GroupRatioParam" type="GroupRatioParamType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantitationResultType">
		<xsd:attribute name="QuantValue_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>Reference to the QuantValue element that provides the evidence trail for this measurement.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Assay_ref" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>Reference to the assay that this quantitation</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="StudyVariable_ref" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>Reference to the QuantMeasurement element that provides the evidence trail for this measurement. If the QuantitationsList is present, this attribute MUST provided.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="GlobalQuantitationResultType">
		<xsd:annotation>
			<xsd:documentation>e.g. Stats across all grouped quantitations for a given protein or peptide</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MeasureParam" type="MeasureParamType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="RatioParam" type="RatioParamType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MeasureParamType">
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Question? Is value always numerical (float) or can a Boolean be included - for now left as xsd:string</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>An accession number identifying the unit within the OBO foundry Unit CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>If a unit term is referenced, this attribute must refer to the CV 'id' attribute defined in the cvList in this file.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="QuantMeasurement_ref" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>Reference to the QuantMeasurement element that provides the evidence trail for this measurement. If the QuantitationsList is present, this attribute MUST provided.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="GroupMeasureParamType">
		<xsd:annotation>
			<xsd:documentation>An extension of MeasureParamType to refer to the StudyVariable</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="MeasureParamType">
				<xsd:attribute name="StudyVariable_ref"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="RatioParamType">
		<xsd:attribute name="value" type="xsd:double" use="required"/>
		<xsd:attribute name="Ratio_ref" type="xsd:IDREF" use="optional">
			<xsd:annotation>
				<xsd:documentation>Reference to the Ratio element in the QuantificationsList. If a QuantificationList is provided, this attribute MUST be completed.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="GroupRatioParamType">
		<xsd:annotation>
			<xsd:documentation>An extension of RatioParamType to allow the study variables of the numerator and denominator to be referenced</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="RatioParamType">
				<xsd:attribute name="StudyVariableNumerator_ref" type="xsd:IDREF"/>
				<xsd:attribute name="StudyVariableDenominator_ref" type="xsd:IDREF"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="IdentificationRefType">
		<xsd:attribute name="id_ref" type="xsd:string"/>
		<xsd:attribute name="file_ref" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="QuantProteinDetectionHypothesisRefsType">
		<xsd:sequence>
			<xsd:element name="QuantProteinDetectionHypothesisRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="quantProteinDetectionHypothesis_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantPeptideRefsType">
		<xsd:sequence>
			<xsd:element name="QuantPeptideRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="quantPeptide_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PeptideListType">
		<xsd:sequence>
			<xsd:element name="Peptide" type="QuantPeptideType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantPeptideType">
		<xsd:sequence>
			<xsd:element name="PeptideSequence" type="sequence">
				<xsd:annotation>
					<xsd:documentation> The amino acid sequence of the (poly)peptide. If a substitution modification has been found, the original sequence should be reported. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Reference for any identifications of peptides - a link to an mzIdentML</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Modification" type="ModificationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="QuantitationResult" type="QuantitationResultType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="ModificationType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>A molecule modification specification. If n modifications have been found on a peptide, there should be n instances of Modification. If multiple modifications are provided as cvParams, it is assumed that the modification is ambiguous i.e. one modification or another. If no CVParams are provided it is assumed that the delta has not been matched to a known modification. A neutral loss should be defined as an additional CVParam within Modification. If more complex information should be given about neutral losses (such as presence/absence on particular product ions), this can additionally be encoded within the FragmentationArray.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="ParamGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="location" type="xsd:int">
			<xsd:annotation>
				<xsd:documentation>Location of the modification within the peptide - position in peptide sequence, counted from the N-terminus residue, starting at position 1. Specific modifications to the N-terminus should be given the location 0. Modification to the C-terminus should be given as peptide length + 1.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="residues" type="listOfChars">
			<xsd:annotation>
				<xsd:documentation>Specification of the residue (amino acid) on which the modification occurs. If multiple values are given, it is assumed that the exact residue modified is unknown i.e. the modification is to ONE of the residues listed. Multiple residues would usually only be specified for PMF data.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="avgMassDelta" type="xsd:double">
			<xsd:annotation>
				<xsd:documentation> Atomic mass delta considering the natural distribution of isotopes in Daltons. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="monoisotopicMassDelta" type="xsd:double">
			<xsd:annotation>
				<xsd:documentation> Atomic mass delta when assuming only the most common isotope of elements in Daltons. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="QuantificationsLayerListType">
		<xsd:sequence>
			<xsd:element name="QuantLayer" type="QuantificationsLayerType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>A layer of QuantValues, for example raw values, normalized values, peptide values, protein values, group means, protein ratios. The type of layer depends partially on the quantitation method and must be described by a CV param.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantificationsLayerType">
		<xsd:sequence>
			<xsd:element name="QuantValue" type="QuantValueType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>One actual quantitation value (described in attributes), together with references to other QuantValues, which have been transformed / aggregated to it.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="cvParam" type="cvParamType">
				<xsd:annotation>
					<xsd:documentation>The description of the layer, for example raw feature value layer, normalized feature value layer, peptide layer, protein layer, group layer. The type of layer depends partially on the quantitation method.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableType">
		<xsd:annotation>
			<xsd:documentation>This needs more work, the groupings may be illogical, may want to group ratios at StudyVariable level rather than just quantitation units</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="cvParamType">
				<xsd:annotation>
					<xsd:documentation>The type of StudyVariable e.g. Phenotypic, biological replicate, technical replicate, time points etc. and references to all the assays that are part of this study variable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:sequence>
				<xsd:element name="AssayRef" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Reference to the assay that is part of this study variable</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Assay_ref" type="xsd:IDREF" use="required"/>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:sequence>
		<xsd:attribute name="id" use="required"/>
		<xsd:attribute name="name"/>
	</xsd:complexType>
	<xsd:complexType name="QuantMeasurementRefsType"/>
	<xsd:complexType name="AssayListType">
		<xsd:sequence>
			<xsd:element name="Assay" type="AssayType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Describes a single experimental run (e.g. with the channel mapping in iTRAQ), which could constitute multiple raw files e.g. if pre-separation steps have occurred</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AssayType">
		<xsd:sequence>
			<xsd:element name="RawFiles" type="RawFilesType"/>
			<xsd:element name="Label" type="LabelType" minOccurs="0"/>
			<xsd:element name="IdentificationFiles" type="IdentificationFilesType" minOccurs="0"/>
			<xsd:element name="DataProcessingOrder" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="DataProcessingOrderElement">
							<xsd:annotation>
								<xsd:documentation>TODO: Consider renaming to DataProcessingStep? ARJ comment - unclear to me if this is the right place within the Assay, the same raw file could be </xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="rank" use="required"/>
								<xsd:attribute name="DataProcessing_ref" type="xsd:IDREF" use="required">
									<xsd:annotation>
										<xsd:documentation>Reference to a data processing step</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cvParam" type="cvParamType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>if there is a set of quasi-standard setups</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="RawFilesType">
		<xsd:annotation>
			<xsd:documentation>All raw files that constitute this Assay.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RawFile" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>A raw mass spectrometry output file that has been analysed e.g. in mzML format. The same raw file can be referenced in multiple assays, for example if it contains multiple samples differentially labelled or tagged. </xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="location" type="xsd:anyURI" use="required"/>
					<xsd:attribute name="name" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="IdentificationFilesType">
		<xsd:sequence>
			<xsd:element name="IdentificationFile">
				<xsd:annotation>
					<xsd:documentation>
            Note: Unclear at what level references to identication should be, may be at PAG, PDH, Peptide or Assay level or potentially all - this is to be resolved</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="location" type="xsd:anyURI" use="required">
						<xsd:annotation>
							<xsd:documentation>
								The location of the identification file that corresponds to this assay e.g. in mzIdentML format
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="name" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantitationsLayerType">
		<xsd:sequence>
			<xsd:element name="QuantValue" type="QuantValueType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>This represent calculations made from one or more features that may be referenced in the PeptideList or ProteinList</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantValueType">
		<xsd:sequence>
			<xsd:element name="FeatureRefs" type="FeatureRefsType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>One or more Features from which the QuantValue was derived.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="QuantValueRefs" type="QuantValueRefsType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>References to other QuantValues, from which this QUantValue was transformed / aggregated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="cvParam" type="cvParamType">
				<xsd:annotation>
					<xsd:documentation>The type of Value. This has also to specifies how the value was crated. (e.g. "normalizing the referenced values" and so on, i.e. the algorithm name, not the algorithm itself, e.g. this referres to the label modification in the respective assay element)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="value" type="xsd:double" use="required"/>
		<xsd:attribute name="error">
			<xsd:annotation>
				<xsd:documentation>The error associated with the value</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>An accession number identifying the unit within the OBO foundry Unit CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>If a unit term is referenced, this attribute must refer to the CV 'id' attribute defined in the cvList in this file.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="QuantValueRefsType">
		<xsd:sequence>
			<xsd:element name="QuantValueRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="quantValue_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FeatureRefsType">
		<xsd:sequence>
			<xsd:element name="FeatureRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="feature_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LabelType">
		<xsd:sequence>
			<xsd:element name="cvParam" type="cvParamType" minOccurs="0"/>
			<xsd:element name="Modification" type="ModParamType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProtocolListType">
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="ProtocolType">
		<xsd:annotation>
			<xsd:documentation>Potentially add in Statistics where means etc can be defined at various levels</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="RatioType">
		<xsd:sequence>
			<xsd:element name="Numerator">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="QuantMeasurementRef" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:attribute name="ref" type="xsd:string" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Denominator">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="QuantMeasurementRef" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:attribute name="ref" type="xsd:string" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID"/>
	</xsd:complexType>
	<xsd:complexType name="NumeratorType">
		<xsd:choice>
			<xsd:element name="QuantMeasurementRefs" type="QuantMeasurementRefsType"/>
			<xsd:element name="StudyVariableRefs" type="StudyVariableRefsType"/>
		</xsd:choice>
		<xsd:attribute name="mathematical_operation" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
          This would be restricted to basics e.g. sum, multiplication etc !! In fact, this probably needs to be more complicated to define
          operations such as 114 X 2 / 117 etc.
        </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DenominatorType">
		<xsd:choice>
			<xsd:element name="QuantMeasurementRefs" type="QuantMeasurementRefsType"/>
		</xsd:choice>
		<xsd:attribute name="mathematical_operation" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>This would be restricted to basics e.g. sum, multiplication etc</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FeatureListType">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="SpectraSets" type="SpectraSetsType" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="Chromatogram" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="Feature" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="FeatureType"/>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="FeatureType">
		<xsd:annotation>
			<xsd:documentation>A region on an MS1 mass spectrum that has been quantified. If quantitative values are extracted from MS2 spectra e.g. in iTRAQ, then the MS1 Feature is included here in multiple copies, with the different quantitative values in the value attribute</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="PeakType">
				<xsd:sequence>
					<xsd:element name="Masstrace" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Each masstrace has a start and a end point in each RT and MZ dimension. </xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="RTstart" type="xsd:double" use="required"/>
							<xsd:attribute name="RTstop" type="xsd:double" use="required"/>
							<xsd:attribute name="MZstart" type="xsd:double" use="required"/>
							<xsd:attribute name="MZstop" type="xsd:double" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userParam" type="userParamType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" use="required" form="unqualified">
					<xsd:annotation>
						<xsd:documentation>unique identifier for the feature.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="DataProcessingRef" type="xsd:IDREF">
					<xsd:annotation>
						<xsd:documentation>dataprocessing producing this feature (e.g. model fit)</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="AssayRef" type="xsd:IDREF">
					<xsd:annotation>
						<xsd:documentation>The featuring Assay</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SpectraSetsType">
		<xsd:sequence>
			<xsd:element name="SpectraSet" type="SpectraSetType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SpectraSetType">
		<xsd:sequence>
			<xsd:element name="SpectrumIdentificationItemRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="file_ref" type="xsd:string"/>
					<xsd:attribute name="spectrumIdentificationItem_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableRefsType">
		<xsd:sequence>
			<xsd:element name="StudyVariableRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="ref" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:group name="ParamGroup">
		<xsd:choice>
			<xsd:element name="userParam" type="userParamType"/>
		</xsd:choice>
	</xsd:group>
	<xsd:complexType name="ParamType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract entity allowing either cvParam or userParam to be referenced in other schemas.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The user-entered value of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>An accession number identifying the unit within the OBO foundry Unit CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>If a unit term is referenced, this attribute must refer to the CV 'id' attribute defined in the cvList in this file.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="userParamType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>A single user-defined parameter.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ParamType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="cvParamType" abstract="false">
		<xsd:annotation>
			<xsd:documentation> A single entry from an ontology or a controlled vocabulary.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ParamType">
				<xsd:attribute name="cvRef" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>A reference to the cv element from which this term originates.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession or ID number of this CV term in the source CV.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="listOfIntegers">
		<xsd:list itemType="xsd:integer"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfFloats">
		<xsd:list itemType="xsd:float"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfChars">
		<xsd:list itemType="chars"/>
	</xsd:simpleType>
	<xsd:simpleType name="chars">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ]{1}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="sequence">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ModParamType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>The modification searched for, sourced from e.g. UniMod and the mass delta</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="cvParamType">
				<xsd:annotation>
					<xsd:documentation>The name of the modification imported from a relevant CV</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="massDelta" type="xsd:float" use="required">
			<xsd:annotation>
				<xsd:documentation>The mass delta of the searched modification in Daltons</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="residues" type="listOfChars" use="optional">
			<xsd:annotation>
				<xsd:documentation>The residue(s) searched with the specified modification</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ParamListType"/>
	<xsd:complexType name="PeakType">
		<xsd:attribute name="RT" type="xsd:double" use="required"/>
		<xsd:attribute name="MZ" type="xsd:double" use="required"/>
		<xsd:attribute name="intensity" type="xsd:double" use="required"/>
		<xsd:attribute name="charge" type="xsd:integer"/>
	</xsd:complexType>
	<xsd:complexType name="DataProcessingListType">
		<xsd:annotation>
			<xsd:documentation>List and descriptions of data processing applied to this data.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="dataProcessing" type="DataProcessingType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DataProcessingType">
		<xsd:annotation>
			<xsd:documentation>Description of the way in which a particular software was used.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="processingMethod" type="ProcessingMethodType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Description of the default peak processing method. This element describes the base method used in the generation of a particular mzML file. Variable methods should be described in the appropriate acquisition section - if no acquisition-specific details are found, then this information serves as the default.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>A unique identifier for this data processing that is unique across all DataProcessingTypes.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ProcessingMethodType" mixed="false">
		<xsd:complexContent mixed="false">
			<xsd:extension base="ParamGroupType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ParamGroupType">
		<xsd:annotation>
			<xsd:documentation>Structure allowing the use of a controlled (cvParam) or uncontrolled vocabulary (userParam), or a reference to a predefined set of these in this mzQuantML file (paramGroupRef).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="cvParamType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="userParam" type="userParamType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
