<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 sp1 (x64) (http://www.altova.com) by Martin Eisenacher (Medizinisches Proteom-Center) -->
<!--
mzQuantML version 0.1.3
Distributed under the Creative Commons license http://creativecommons.org/licenses/by/2.0/.

Issues:
		different representations for the same setup?
		value redundance?
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://psidev.info/psi/pi/mzQuantML/0.1"
	xmlns:psi-mzq="http://psidev.info/psi/pi/mzQuantML/0.1"
	targetNamespace="http://psidev.info/psi/pi/mzQuantML/0.1" elementFormDefault="qualified"
	version="0.1">
	<xsd:element name="mzQuantML">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="cvList" type="cvListType"/>
				<xsd:element name="InputFiles" type="InputFilesType" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="AssayList" type="AssayListType">
					<xsd:annotation>
						<xsd:documentation>The list of assays represented by the file, where each
							assay captures the concept of one experimental run - this can be one or
							more raw files.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="StudyVariableList" type="StudyVariableListType">
					<xsd:annotation>
						<xsd:documentation>The list of experimental conditions used to group
							results.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="RatioList" type="RatioListType" maxOccurs="1" minOccurs="0"/>
				<xsd:element name="ProteinGroupList" type="ProteinGroupListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of all proteins quantified. This element should
							always be provided unless there is only quantification of
							peptides.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ProteinList" type="ProteinListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of all proteins quantified. This element should
							always be provided unless there is only quantification of
							peptides.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="PeptideList" type="PeptideListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The list of all peptides quantified.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="FeatureList" minOccurs="0" maxOccurs="unbounded" type="FeatureListType">
					<xsd:annotation>
						<xsd:documentation>The lists of features quantified from each set of raw
							files</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="MatchedFeatureList" type="MatchedFeatureListType" minOccurs="0"/>
				<xsd:element name="DataProcessingList" type="DataProcessingListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Data processing steps used to create the
							results</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>		
	</xsd:element>

	<xsd:complexType name="cvListType">
		<xsd:sequence>
			<xsd:element name="cv" type="cvType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="InputFilesType">
		<xsd:annotation>
			<xsd:documentation>All the raw files, identification files and databases used in the quantification</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RawFilesGroup" type="RawFilesGroupType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="IdenficationFiles" type="IdentificationFilesType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="SearchDatabase" type="SearchDatabaseType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SearchDatabaseType">
		<xsd:annotation>
			<xsd:documentation>A database for searching mass spectra. Examples include a set of amino acid sequence entries, or annotated spectra libraries. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ExternalDataType">
				<xsd:sequence>
					<xsd:element name="DatabaseName" type="ParamType">
						<xsd:annotation>
							<xsd:documentation>The database name may be given as a cvParam if it maps exactly to one of the release databases listed in the CV, otherwise a userParam should be used. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="cvParam" type="CVParamType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="version" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>The version of the database.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="releaseDate" type="xsd:dateTime">
					<xsd:annotation>
						<xsd:documentation>The date and time the database was released to the public; omit this attribute when the date and time are unknown or not applicable (e.g. custom databases). </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="numDatabaseSequences" type="xsd:long">
					<xsd:annotation>
						<xsd:documentation>The total number of sequences in the database.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="numResidues" type="xsd:long">
					<xsd:annotation>
						<xsd:documentation>The number of residues in the database.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SourceFileType">
		<xsd:annotation>
			<xsd:documentation>A file from which this mzIdentML instance was created.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ExternalDataType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableListType">
		<xsd:sequence>
			<xsd:element name="StudyVariable" type="StudyVariableType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="cvType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>A source controlled vocabulary from which cvParams will be
				obtained.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="fullName" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The full name of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The version of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="URI" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the source CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The unique identifier of this cv within the document to be
					referenced by cvParam elements.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="RatioListType">
		<xsd:annotation>
			<xsd:documentation>Ratios of study variables or assays.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Ratio" type="RatioType" minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProteinGroupListType">
		<xsd:sequence>
			<xsd:element name="ProteinGroup" type="ProteinGroupType" minOccurs="0"
				maxOccurs="unbounded"/>
			<xsd:element name="QuantLayer" type="QuantLayerType" minOccurs="0" maxOccurs="unbounded"
			/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProteinListType">
		<xsd:sequence>
			<xsd:element name="Protein" type="ProteinType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="QuantLayer" type="QuantLayerType" minOccurs="0" maxOccurs="unbounded"
			/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QuantLayerRefType">
		<xsd:annotation>
			<xsd:documentation>Reference to QuantLayers about this object</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="quantLayer_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>Reference to a quant layer.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ProteinGroupType">
		<xsd:sequence>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0"
				maxOccurs="unbounded"/>
			<xsd:element name="protein_refs"
				type="xsd:IDREFS" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>The proteins contributing to this protein group on which quantitative values are based. TODO - may need to add some extra model to cover the case that different proteins may contribute to group within one Assay or StudyVariable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="ProteinType">
		<xsd:sequence>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0"
				maxOccurs="unbounded"/>
			<xsd:element name="peptide_refs" type="xsd:IDREFS" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>The peptides used to generate the values in the QuantLayer
						(note this should not be used to report all peptides that can support the
						protein identification, only quantitation)..</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="accession" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="IdentificationRefType">
		<xsd:attribute name="id_ref" type="xsd:string"/>
		<xsd:attribute name="file_ref" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="ProteinDetectionHypothesisRefsType">
		<xsd:sequence>
			<xsd:element name="ProteinDetectionHypothesisRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="proteinDetectionHypothesis_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PeptideRefsType">
		<xsd:sequence>
			<xsd:element name="PeptideRef" maxOccurs="unbounded" type="PeptideRefType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PeptideRefType">
		<xsd:annotation>
			<xsd:documentation>Reference to a peptide objects</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="peptide_ref" type="xsd:IDREF" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="PeptideListType">
		<xsd:sequence>
			<xsd:element name="Peptide" type="PeptideType" maxOccurs="unbounded"/>
			<xsd:element name="QuantLayer" type="QuantLayerType" minOccurs="0" maxOccurs="unbounded"
			/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PeptideType">
		<xsd:sequence>
			<xsd:element name="PeptideSequence" type="sequence" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation> The amino acid sequence of the (poly)peptide. If a
						substitution modification has been found, the original sequence should be
						reported. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="IdentificationRef" type="IdentificationRefType" minOccurs="0"
				maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Reference for any identifications of peptides - a link to an
						mzIdentML</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Modification" type="ModificationType" minOccurs="0"
				maxOccurs="unbounded"/>
			<xsd:element name="feature_refs" type="xsd:IDREFS" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Optional references to features on which peptide values in
						the QuantLayer were based.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="matched_feature_refs" type="xsd:IDREFS" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Optional references to matched features on which peptide
						values in the QuantLayer were based.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="ModificationType">
		<xsd:annotation>
			<xsd:documentation>A molecule modification specification. If n modifications have been
				found on a peptide, there should be n instances of Modification. If multiple
				modifications are provided as cvParams, it is assumed that the modification is
				ambiguous i.e. one modification or another. A cvParam must be provided with the
				identification of the modification sourced from a suitable CV e.g. UNIMOD. If the
				modification is not present in the CV (and this will be checked by the semantic
				validator within a given tolerance window), there is a “unknown modification” CV
				term that must be used instead. A neutral loss should be defined as an additional
				CVParam within Modification. If more complex information should be given about
				neutral losses (such as presence/absence on particular product ions), this can
				additionally be encoded within the FragmentationArray. </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType" minOccurs="1" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>CV terms capturing the modification, sourced from an
						appropriate controlled vocabulary.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="location" type="xsd:int">
			<xsd:annotation>
				<xsd:documentation>Location of the modification within the peptide - position in
					peptide sequence, counted from the N-terminus residue, starting at position 1.
					Specific modifications to the N-terminus should be given the location 0.
					Modification to the C-terminus should be given as peptide length + 1.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="residues" type="listOfChars">
			<xsd:annotation>
				<xsd:documentation>Specification of the residue (amino acid) on which the
					modification occurs. If multiple values are given, it is assumed that the exact
					residue modified is unknown i.e. the modification is to ONE of the residues
					listed. Multiple residues would usually only be specified for PMF data.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="avgMassDelta" type="xsd:double">
			<xsd:annotation>
				<xsd:documentation>Atomic mass delta considering the natural distribution of
					isotopes in Daltons. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="monoisotopicMassDelta" type="xsd:double">
			<xsd:annotation>
				<xsd:documentation>Atomic mass delta when assuming only the most common isotope of
					elements in Daltons. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="QuantLayerType">
		<xsd:annotation>
			<xsd:documentation>A collection of data relating to the objects within the parent list
				type (MatchedFeature, Peptide, Protein or ProteinGroup)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DataType" type="cvParamRefType" maxOccurs="1" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Type of data in the quant layer e.g. cvParam =
						"Intensity|RawAbundance|NormalisedAbundance|PeptideCount|ConfidenceScore|Anova|MaxFoldChange|...."</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ColumnIndex" type="xsd:IDREFS" maxOccurs="1" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Space separated unique identifiers for each column of data,
						must refer to an object in the file - StudyVariable, Assay,
						AssayList</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ColumnType">
				<xsd:annotation>
					<xsd:documentation>Type of column - allowed values: StudyVariable, Assay,
						AssayList or Ratio</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="StudyVariable"/>
						<xsd:enumeration value="Assay"/>
						<xsd:enumeration value="AssayList"/>
						<xsd:enumeration value="Ratio"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="DataMatrix" type="DataMatrixType" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="FeatureQuantLayerType">
		<xsd:annotation>
			<xsd:documentation>All the data types generated about the raw features e.g. prior to
				feature matching.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="FeatureColumnIndex" type="FeatureColumnIndexType" maxOccurs="1"
				minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Definition of the data types in each
						column</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DataMatrix" type="DataMatrixType" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="FeatureColumnIndexType">
		<xsd:annotation>
			<xsd:documentation>The definition of all the columns of data about the
				features</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="FeatureColumn" type="FeatureColumnType" minOccurs="1"
				maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FeatureColumnType">
		<xsd:sequence>
			<xsd:element name="DataType" type="cvParamRefType" maxOccurs="unbounded" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Type of data in the column e.g. cvParam =
						"Intensity|RawAbundance|NormalisedAbundance"</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:int" use="required">
			<xsd:annotation>
				<xsd:documentation>The column position within the data matrix - incrementing
					positive integers starting from zero. TODO - add a data type to enforce positive
					integers</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>

		<xsd:attribute name="processingStep_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>The data processing step that generated this data
					type</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DataMatrixType">
		<xsd:annotation>
			<xsd:documentation>A matrix of data stored in rows and columns, as defined in the
				QuantLayer</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Row" type="RowType" minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="RowType">
		<xsd:annotation>
			<xsd:documentation>One row of data in a data matrix</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="psi-mzq:listOfDoubles">
				<xsd:attribute name="object_ref" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>Reference to the data type represented in this row e.g.
							Feature, Peptide, Protein. TODO - we should add a constraint that this
							should be unique within the data matrix</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<!--  
				<xsd:attribute name="index" type="xsd:int" use="required">
					<xsd:annotation>
						<xsd:documentation>Row identifier</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				
				<xsd:attribute name="cell_ids"  use="optional">
					<xsd:annotation>
						<xsd:documentation>Unique identifiers for each cell of data. These are only required if they must be referenced from elsewhere</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType><xsd:list itemType="xsd:ID"/></xsd:simpleType>
				</xsd:attribute>
				-->
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableType">
		<xsd:annotation>
			<xsd:documentation>This needs more work, the groupings may be illogical, may want to
				group ratios at StudyVariable level rather than just quantitation
				units</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType">
				<xsd:annotation>
					<xsd:documentation>The type of StudyVariable e.g. Phenotypic, biological
						replicate, technical replicate, time points etc. and references to all the
						assays that are part of this study variable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:sequence>
				<xsd:element name="AssayRef" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Reference to the assay that is part of this study
							variable</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="assay_ref" type="xsd:IDREF" use="required"/>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:sequence>
		<xsd:attribute name="id" use="required" type="xsd:ID"/>
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>

	<xsd:complexType name="AssayListType">
		<xsd:sequence>
			<xsd:element name="Assay" type="AssayType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Describes a single experimental run (e.g. with the channel
						mapping in iTRAQ), which could constitute multiple raw files e.g. if
						pre-separation steps have occurred</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" use="required" type="xsd:ID"/>
	</xsd:complexType>
	<xsd:complexType name="AssayType">
		<xsd:sequence>
			<xsd:element name="raw_files_group_ref" type="xsd:IDREFS" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>The raw file or group of raw files that constitute this assay.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Label" type="LabelType" minOccurs="0"/>
			<xsd:element name="IdentificationFiles" type="IdentificationFilesType" minOccurs="0"/>
			<xsd:element name="DataProcessingOrder" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="DataProcessingOrderElement">
							<xsd:annotation>
								<xsd:documentation>TODO: Consider renaming to DataProcessingStep?
									ARJ comment - unclear to me if this is the right place within
									the Assay, the same raw file could be </xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="rank" use="required"/>
								<xsd:attribute name="dataProcessing_ref" type="xsd:IDREF"
									use="required">
									<xsd:annotation>
										<xsd:documentation>Reference to a data processing
											step</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cvParam" type="CVParamType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>if there is a set of quasi-standard
						setups</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="RawFilesGroupType">
		<xsd:annotation>
			<xsd:documentation>The raw file or collection of raw files that together form one unit of analysis. This is mandatory unless
				raw files were not used for quantification e.g. spectral
				counting</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RawFile" maxOccurs="unbounded" type="ExternalDataType">
				<xsd:annotation>
					<xsd:documentation>A raw mass spectrometry output file that has been analysed
						e.g. in mzML format. The same raw file can be referenced in multiple assays,
						for example if it contains multiple samples differentially labelled or
						tagged. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>Unique identifier for the group of raw files that constitute one analysis unit i.e. multiple raw files should only be provided here if they have been used for sample pre-fractionation which are later summed together.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>	
	<xsd:complexType name="IdentificationFilesType">
		<xsd:sequence>
			<xsd:element name="IdentificationFile">
				<xsd:annotation>
					<xsd:documentation> Note: Unclear at what level references to identication
						should be, may be at PAG, PDH, Peptide or Assay level or potentially all -
						this is to be resolved</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="location" type="xsd:anyURI" use="required">
						<xsd:annotation>
							<xsd:documentation> The location of the identification file that
								corresponds to this assay e.g. in mzIdentML format
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="name" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LabelType">
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType" minOccurs="0"/>
			<xsd:element name="Modification" type="ModParamType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProtocolListType">
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="ProtocolType">
		<xsd:annotation>
			<xsd:documentation>Potentially add in Statistics where means etc can be defined at
				various levels</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:complexType name="RatioType">
		<xsd:sequence>
			<xsd:element name="RatioCalculation" type="ParamListType" maxOccurs="1" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Information should be provided about how ratios are calculated if they differ from simple division of numerator by denominator </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="numerator_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>Reference to a StudyVariable or an Assay</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="denominator_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>Reference to a StudyVariable or an Assay</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="name" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Optional name for the ratio</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FeatureListType">
		<xsd:sequence>
			<xsd:element name="Feature" maxOccurs="unbounded" type="FeatureType"/>
			<xsd:element name="FeatureQuantLayer" type="FeatureQuantLayerType" minOccurs="0"
				maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="RawFileGroup_ref" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>Refernece to the raw file or group of raw files from which this feature list was generated.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="dataProcessing_ref" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>dataprocessing producing this feature list (e.g. model
					fit)</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FeatureType">
		<xsd:annotation>
			<xsd:documentation>A region on an MS1 mass spectrum that has been quantified. If
				quantitative values are extracted from MS2 spectra e.g. in iTRAQ, then the MS1
				Feature is included here in multiple copies, with the different quantitative values
				in the value attribute</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Masstrace" minOccurs="0" maxOccurs="1" type="psi-mzq:listOfDoubles">
				<xsd:annotation>
					<xsd:documentation>Each masstrace has a start and a end point in each RT and MZ
						dimension. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<!-- TODO decide about whether cvParams and userParams are allowed on Features, Peptides, Proteins etc? 
			<xsd:element name="userParam" type="userParamType" minOccurs="0" maxOccurs="unbounded"/>
			-->
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required" form="unqualified">
			<xsd:annotation>
				<xsd:documentation>unique identifier for the feature.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="RT" type="xsd:double" use="required"/>
		<xsd:attribute name="MZ" type="xsd:double" use="required"/>
		<!--	<xsd:attribute name="intensity" type="xsd:double" use="required"/> -->
		<xsd:attribute name="charge" type="xsd:integer"/>		
		<xsd:attribute name="assay_ref" type="xsd:IDREF" use="optional">
			<xsd:annotation>
				<xsd:documentation>The assay to which this feature has been assigned. This attribute is required for label-based approaches after feature matching has been performed.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MatchedFeatureListType">
		<xsd:sequence>
			<xsd:element name="MatchedFeature" type="MatchedFeatureType" minOccurs="1"
				maxOccurs="unbounded"/>
			<xsd:element name="QuantLayer" type="QuantLayerType" minOccurs="0" maxOccurs="unbounded"
			/>
		</xsd:sequence>
		<xsd:attribute name="dataProcessing_ref" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>dataprocessing producing the matches</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MatchedFeatureType">
		<xsd:sequence>
			<xsd:element name="feature_refs" type="xsd:IDREFS"/>
			<!-- All the pointers go downwards i.e. if you want to create a link from MatchedFeature to Peptide, you must create a peptide entry in the PeptideList  
			<xsd:element name="PeptideRef" type="PeptideRefType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>It would be expected that a MatchedFeature can only be associated with one peptide. However, multiple peptide references are (currently) allowed in case of unclear evidence as to which MatchedFeature should be associated with which peptide object.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			-->
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required" form="unqualified">
			<xsd:annotation>
				<xsd:documentation>unique identifier for the feature.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<!-- TODO - likely remove SpectraSets from the XSD at a later date, not currently used -->
	<xsd:complexType name="SpectraSetsType">
		<xsd:sequence>
			<xsd:element name="SpectraSet" type="SpectraSetType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SpectraSetType">
		<xsd:sequence>
			<xsd:element name="SpectrumIdentificationItemRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="file_ref" type="xsd:string"/>
					<xsd:attribute name="spectrumIdentificationItem_ref" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="StudyVariableRefsType">
		<xsd:sequence>
			<xsd:element name="StudyVariableRef" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="studyVariable_ref" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>	
	<xsd:simpleType name="listOfIntegers">
		<xsd:list itemType="xsd:integer"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfFloats">
		<xsd:list itemType="xsd:float"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfChars">
		<xsd:list itemType="chars"/>
	</xsd:simpleType>
	<xsd:simpleType name="chars">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ]{1}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="sequence">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ModParamType" abstract="false">
		<xsd:annotation>
			<xsd:documentation>The modification searched for, sourced from e.g. UniMod and the mass
				delta</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType">
				<xsd:annotation>
					<xsd:documentation>The name of the modification imported from a relevant
						CV</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="massDelta" type="xsd:float" use="required">
			<xsd:annotation>
				<xsd:documentation>The mass delta of the searched modification in
					Daltons</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="residues" type="listOfChars" use="optional">
			<xsd:annotation>
				<xsd:documentation>The residue(s) searched with the specified
					modification</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="DataProcessingListType">
		<xsd:annotation>
			<xsd:documentation>List and descriptions of data processing applied to this
				data.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DataProcessing" type="DataProcessingType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DataProcessingType">
		<xsd:annotation>
			<xsd:documentation>Description of the way in which a particular software was
				used.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ProcessingMethod" type="ParamListType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Description of the default data processing method.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>A unique identifier for this data processing that is unique
					across all DataProcessingTypes.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>	
	<xsd:simpleType name="listOfDoubles">
		<xsd:list itemType="xsd:double"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfIDs">
		<xsd:list itemType="xsd:ID"/>
	</xsd:simpleType>
	<xsd:complexType name="cvParamRefType">
		<xsd:annotation>
			<xsd:documentation>Helper complexType to include one cvParam as a
				sub-element</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="CVParamType">
		<xsd:annotation>
			<xsd:documentation>A single entry from an ontology or a controlled
				vocabulary.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="cvRef" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>A reference to the cv element from which this term originates. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession or ID number of this CV term in the source CV. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AbstractParamType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract entity allowing either cvParam or userParam to be referenced in other schemas. </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The user-entered value of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>An accession number identifying the unit within the OBO foundry Unit CV. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>If a unit term is referenced, this attribute must refer to the CV 'id' attribute defined in the cvList in this file. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="UserParamType">
		<xsd:annotation>
			<xsd:documentation>A single user-defined parameter.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="type" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>The datatype of the parameter, where appropriate (e.g.: xsd:float).</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ParamListType">
		<xsd:annotation>
			<xsd:documentation>Helper type to allow multiple cvParams or userParams to be given for an element.</xsd:documentation>
		</xsd:annotation>
		<xsd:group ref="ParamGroup" maxOccurs="unbounded"/>
	</xsd:complexType>
	<xsd:complexType name="ParamType">
		<xsd:annotation>
			<xsd:documentation>Helper type to allow either a cvParam or a userParam to be provided for an element.</xsd:documentation>
		</xsd:annotation>
		<xsd:group ref="ParamGroup"/>
	</xsd:complexType>
	<xsd:group name="ParamGroup">
		<xsd:annotation>
			<xsd:documentation>A choice of either a cvParam or userParam.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="cvParam" type="CVParamType"/>
			<xsd:element name="userParam" type="UserParamType"/>
		</xsd:choice>
	</xsd:group>
	<xsd:complexType name="ExternalDataType">
		<xsd:annotation>
			<xsd:documentation>Data external to the XML instance document. The location of the data file is given in the location attribute. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="IdentifiableType">
				<xsd:sequence>
					<xsd:element name="ExternalFormatDocumentation" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A URI to access documentation and tools to interpret the external format of the ExternalData instance. For example, XML Schema or static libraries (APIs) to access binary formats.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="FileFormat" type="FileFormatType" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="location" type="xsd:anyURI" use="required">
					<xsd:annotation>
						<xsd:documentation>The location of the data file.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FileFormatType">
		<xsd:annotation>
			<xsd:documentation>The format of the ExternalData file, for example "tiff" for image files. </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType">
				<xsd:annotation>
					<xsd:documentation>cvParam capturing file formats</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="IdentifiableType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Other classes in the model can be specified as sub-classes, inheriting from Identifiable. Identifiable gives classes a unique identifier within the scope and a name that need not be unique. Identifiable also provides a mechanism for annotating objects with BibliographicReference(s) and DatabaseEntry(s).	</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="id" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>An identifier is an unambiguous string that is unique within the scope (i.e. a document, a set of related documents, or a repository) of its use.		</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The potentially ambiguous common identifier, such as a human-readable name for the instance. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
</xsd:schema>
